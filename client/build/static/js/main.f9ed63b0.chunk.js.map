{"version":3,"sources":["actions/types.js","actions/alert.js","utils/setAuthToken.js","actions/auth.js","components/Alert/Alert.jsx","pages/Register/Register.jsx","pages/Login/Login.jsx","components/Navbar/Navbar.jsx","components/Container/Container.jsx","components/Container/Field/Field.jsx","components/ResultsList/Result/Result.jsx","components/ResultsList/ResultsList.jsx","utils/API.js","components/SelectedResult/SelectedResult.jsx","components/ResultsContainer/ResultsContainer.jsx","pages/Home/Home.jsx","pages/Saved/Saved.jsx","components/routing/PrivateRoute.jsx","reducers/alert.js","reducers/auth.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","setAlert","msg","alertType","timeout","dispatch","id","uuid","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","connect","state","alerts","alert","length","map","className","isAuthenticated","auth","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","useState","password2","formData","setFormData","onChange","e","target","value","onSubmit","preventDefault","to","icon","faNewspaper","htmlFor","placeholder","login","required","minLength","logout","loading","isActive","setIsActive","authLinks","onClick","faSignOutAlt","guestLinks","faUserPlus","faSignInAlt","size","role","aria-label","aria-expanded","aria-hidden","Container","children","Field","props","mainDiv","classProp","Result","selected","src","data-src","handleSelected","topic","date","title","ResultsList","Array","isArray","results","article","index","time","headline","params","selectedResult","articleData","articleId","delete","userId","isArticleSaved","setIsArticleSaved","useEffect","user","currentPath","API","_id","then","console","log","undefined","find","result","useLocation","pathname","saveArticle","text","rel","href","headlineSummary","timeSummary","author","company","deleteArticle","displayBtn","x","i","ResultsContainer","timeRange","Home","searchResults","filters","searchTopic","startYear","endYear","getArticles","setState","catch","err","handleFormSubmit","event","closest","dataset","this","Component","savedResults","setSavedResults","setSelectedResult","filter","component","rest","render","initialState","getItem","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","Login","Register","Saved","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f9ed63b0.chunk.js","sourcesContent":["export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';","import { v4 as uuid } from 'uuid';\nimport { SET_ALERT, REMOVE_ALERT } from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    const id = uuid();\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType, id }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout)\n}","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default setAuthToken;","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\nimport setAuthToken from '../utils/setAuthToken'\n\n// Load User\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/auth');\n\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        });\n    }\n}\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ name, email, password });\n\n    try {\n        const res = await axios.post('/api/users', body, config);\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: REGISTER_FAIL\n        })\n    }\n}\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('/api/auth', body, config);\n\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        })\n\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n\n        dispatch({\n            type: LOGIN_FAIL\n        })\n    }\n}\n\nexport const logout = () => dispatch => {\n    dispatch({ type: LOGOUT });\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'\n\nconst Alert = ({ alerts }) =>\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map(alert => (\n        <article key={alert.id} className={`m-3 message is-${alert.alertType}`}>\n            <div className=\"message-body\">\n                {alert.msg}\n            </div>\n        </article>\n    ));\n\nAlert.propTypes = {\n    alerts: PropTypes.array.isRequired\n}\n\nconst mapStateToProps = state => ({\n    alerts: state.alert\n})\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { register } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faNewspaper } from '@fortawesome/free-solid-svg-icons'\n\nimport Alert from \"../../components/Alert\";\n\nimport './Register.scss';\n\nconst Register = ({ setAlert, register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const onChange = e =>\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n\n        if (password !== password2) {\n            setAlert(\"Paswords do not match\", 'danger')\n        } else {\n            register({ name, email, password });\n        }\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/home\" />\n    }\n\n    return (\n        <div className=\"Register has-background-link\">\n            <div className=\"column is-full\">\n                <h1 className=\"title is-1 mt-5 has-text-white\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faNewspaper} />\n                    AZ Central Scraper\n                </h1>\n            </div>\n\n\n            <div className=\"column box-shadow window has-background-white is-half-tablet\">\n                <form onSubmit={e => onSubmit(e)}>\n                    <Alert />\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"name\">Name: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"John Doe\"\n                                name=\"name\"\n                                value={name}\n                                onChange={e => onChange(e)}\n\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"JohnDoe@gmail.com\"\n                                name=\"email\"\n                                value={email}\n                                onChange={e => onChange(e)}\n\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"password\">Password: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"password\"\n                                placeholder=\"*********\"\n                                name=\"password\"\n                                value={password}\n                                onChange={e => onChange(e)}\n\n\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"password2\">Confirm Password: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"password\"\n                                placeholder=\"*********\"\n                                name=\"password2\"\n                                value={password2}\n                                onChange={e => onChange(e)}\n\n\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <button\n                                className=\"button is-link\"\n                                type=\"submit\"\n                                value=\"Register\"\n                            >\n                                Submit\n                            </button>\n                        </div>\n                    </div>\n                </form>\n                <p>Already have an account? <Link to=\"/\">Log in</Link></p>\n                <p>Or <Link to=\"/home\">continue as guest</Link></p>\n            </div>\n        </div>\n    )\n}\n\nRegister.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    register: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { setAlert, register })(Register);\n","import React, { useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { setAlert } from '../../actions/alert';\nimport { login } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faNewspaper } from '@fortawesome/free-solid-svg-icons'\n\nimport Alert from \"../../components/Alert\";\n\nimport './Login.scss';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formData;\n\n    const onChange = e =>\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        login(email, password)\n    }\n\n    if (isAuthenticated) {\n        return <Redirect to=\"/home\" />\n    }\n\n    return (\n        <div className=\"Login has-background-link\">\n            <div className=\"column is-full\">\n                <h1 className=\"title is-1 mt-5 has-text-white\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faNewspaper} />\n                    AZ Central Scraper\n                </h1>\n            </div>\n\n            <div className=\"column box-shadow window has-background-white is-half-tablet\">\n                <form onSubmit={e => onSubmit(e)}>\n                    <Alert />\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"email\">Email: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"text\"\n                                placeholder=\"JohnDoe@gmail.com\"\n                                name=\"email\"\n                                value={email}\n                                onChange={e => onChange(e)}\n                                required\n                            />\n                        </div>\n                    </div>\n                    <div className=\"field\">\n                        <label className=\"label\" htmlFor=\"password\">Password: </label>\n                        <div className=\"control\">\n                            <input\n                                className=\"input\"\n                                type=\"password\"\n                                placeholder=\"*********\"\n                                name=\"password\"\n                                value={password}\n                                onChange={e => onChange(e)}\n                                minLength=\"6\"\n                                required\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <div className=\"control\">\n                            <button\n                                className=\"button is-link\"\n                                type=\"submit\"\n                                value=\"Login\"\n                            >\n                                Submit\n                        </button>\n                        </div>\n                    </div>\n                </form>\n                <p>Don't have an account? <Link to=\"/register\">Sign Up</Link></p>\n                <p>Or <Link to=\"/home\">continue as guest</Link></p>\n            </div>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n    setAlert: PropTypes.func.isRequired,\n    login: PropTypes.func.isRequired,\n    isAuthenticated: PropTypes.bool\n}\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n})\n\nexport default connect(mapStateToProps, { setAlert, login })(Login);\n","import React, { Fragment, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/auth';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faNewspaper, faUserPlus, faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons'\n\nimport \"./Navbar.scss\";\n\nconst Navbar = ({ auth: { isAuthenticated, loading }, logout }) => {\n    const [isActive, setIsActive] = useState(false);\n\n    const authLinks = (\n        <Fragment>\n            <div className=\"navbar-start\">\n                <Link className=\"navbar-item\" to=\"/home\">Home</Link>\n                <Link className=\"navbar-item\" to=\"/saved\">Saved Articles</Link>\n            </div>\n            <div className=\"navbar-end\">\n                <Link className=\"navbar-item\" onClick={logout} to=\"/\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faSignOutAlt} />\n                    Logout\n                </Link>\n            </div>\n        </Fragment>\n    )\n\n    const guestLinks = (\n        <Fragment>\n            <div className=\"navbar-start\">\n                <Link className=\"navbar-item\" to=\"/home\">Home</Link>\n            </div>\n            <div className=\"navbar-end\">\n                <Link className=\"navbar-item\" to=\"/register\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faUserPlus} />\n                    Sign Up\n                </Link>\n                <Link className=\"navbar-item\" to=\"/\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faSignInAlt} />\n                    Login\n                </Link>\n            </div>\n        </Fragment>\n    )\n\n    return (\n        <nav className=\"navbar px-5 is-info\">\n            <div className=\"navbar-brand\">\n                <Link className=\"navbar-item\" to=\"/home\">\n                    <FontAwesomeIcon className=\"has-text-info\" icon={faNewspaper} size=\"lg\" />\n                    <span className=\"navbar-title\">AZ Central Scraper</span>\n                </Link>\n\n                <a \n                    role=\"button\"\n                    className={`navbar-burger ${isActive ? 'is-active' : ''}`}\n                    aria-label=\"menu\"\n                    aria-expanded=\"false\"\n                    onClick={() => {\n                        setIsActive(!isActive);\n                    }}\n                >\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                    <span aria-hidden=\"true\"></span>\n                </a>\n            </div>\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\n                {!loading && (<Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>)}\n            </div>\n\n        </nav>\n\n    )\n}\n\nNavbar.propTypes = {\n    logout: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logout })(Navbar);","import React from 'react';\n\nimport './Container.css';\n\nconst Container = ({children}) => (\n    <div className=\"Container\">\n        {children}\n    </div>\n)\n\nexport default Container;","import React from 'react';\n\nimport './Field.css';\n\nconst Field = (props) => {\n    let mainDiv = \"Field\";\n    \n    if (props.classProp) {\n        mainDiv += ` ${props.classProp}`\n    }\n\n    return (\n        <div className={mainDiv}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Field;","import React from 'react';\n\nimport './Result.scss'\n\nconst Result = (props) => {\n    const selected = props.selected.src === props.src ? 'selected' : null\n    return (\n        <div className={`Result ${selected}`} data-src={props.src} onClick={props.handleSelected}>\n            <p className=\"time has-text-link\">\n               {props.topic} - {props.date}\n            </p>\n            <p className=\"title is-5\">\n                {props.title}\n            </p>\n        </div>\n    )\n}\n\nexport default Result;","import React from 'react';\n\nimport Field from '../Container/Field';\nimport Result from './Result'\n\nimport \"./ResultsList.css\";\n\nconst ResultsList = props => {\n    return (\n        <Field classProp=\"ResultsList\">\n            <div className=\"filter-var\">\n                <strong>Topic:</strong> {props.topic}\n            </div>\n\n            <div className=\"article-list\">\n                {Array.isArray(props.results) ? props.results.map((article, index) => {\n                    if (!article.time) {\n                        return;\n                    }\n\n                    return (\n                        <Result \n                            key={index}\n                            id={article.id}\n                            title={article.headline}\n                            topic={article.topic}\n                            date={article.time}\n                            src={article.src}\n                            handleSelected={props.handleSelected}\n                            selected={props.selected}\n                        />\n                    )\n                }) : null}\n            </div>\n        </Field>\n    )\n}\n\nexport default ResultsList","import axios from \"axios\";\n\nexport default {\n  getArticles: function(params) {\n    return axios.get(\"/api/azc\");\n  },\n  getSelectedArticle: function(selectedResult){\n    return axios.post(\"/api/azc/selected\", {selectedResult})\n  },\n  saveArticle: function(articleData) {\n    axios.post(\"/api/article\", articleData);\n  },\n  deleteArticle: function(articleId) {\n    axios.delete(`/api/article/${articleId}`);\n  },\n  getSavedArticles: function(userId) {\n    return axios.get(`/api/article/user/${userId}`);\n  }\n};\n","import React, { useState, useEffect } from 'react';\nimport Field from '../Container/Field';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport API from \"../../utils/API\";\nimport { useLocation, Link } from 'react-router-dom'\n\nimport './SelectedResult.css'\n\nconst SelectedResult = (props) => {\n    const [isArticleSaved, setIsArticleSaved] = useState(null)\n\n    useEffect(() => {\n        if (props.auth.user && currentPath === '/home') {\n            API.getSavedArticles(props.auth.user._id)\n                .then(res => {\n                    console.log(props.selected)\n                    setIsArticleSaved(res.data.find(result => result.src === props.selected.src) !== undefined)\n                })\n        }\n    }, [props.auth.user, props.selected])\n\n    const currentPath = useLocation().pathname;\n\n    const { selected } = props;\n\n    const saveArticle = () => {\n        API.saveArticle({ ...selected, user: props.auth.user })\n\n        setIsArticleSaved(true)\n    }\n\n    const displayBtn = () => {\n        const { isAuthenticated } = props.auth;\n\n        if (currentPath === '/home') {\n            if (!isAuthenticated || isArticleSaved) {\n                return null;\n            } else {\n                return (\n                    <div className=\"mt-2 w-100 has-text-right\">\n                        <button onClick={saveArticle} className=\"button is-success is-outlined\">\n                            Save Article\n                        </button>\n                    </div>\n                )\n            }\n        } else {\n            return (\n                <div className=\"mt-2 w-100 has-text-right\">\n                    <button onClick={props.deleteArticle} className=\"button is-danger is-outlined\">\n                        Delete\n                    </button>\n                </div>\n            )\n        }\n    }\n\n    if (!selected || !selected.text) {\n        return (\n            <Field classProp=\"SelectedResult\">\n                <div className=\"header\">\n                    <p className=\"title\">Save articles on the home page to view saved articles</p>\n                </div>\n                <hr />\n\n                <div className=\"article has-text-left\">\n                    <p className=\"content-p\">\n                        Go to the home page, select an article that you are interested in or would like to save and click the save article button!\n                    </p>\n                    <p className=\"content-p\">\n                        Your saved articles will appear here for you to view whenever you'd like.\n                    </p>\n                    <p className=\"content-p\">Click here to go to the <Link to=\"/Home\">Home Page</Link></p>\n                </div>\n            </Field>\n        )\n    }\n\n    if (selected.text && selected.text.length === 0) {\n        return (\n            <Field classProp=\"SelectedResult\">\n                <div className=\"header\">\n                    <h4 className=\"title is-4\">Article cannot be scraped</h4>\n\n                    <div className=\"links mt-4\">\n                        <p>Visit the article here: </p>\n                        <a target=\"_blank\" rel=\"noreferrer\" href={selected.src}>{selected.src}</a>\n                    </div>\n                </div>\n            </Field>\n        )\n    }\n\n    return (\n        <Field classProp=\"SelectedResult has-text-left\">\n            <div className=\"header\">\n                <p className=\"title\">{selected.headlineSummary}</p>\n                <p className=\"time has-text-right has-text-link\"><b>{selected.topic}</b> | {selected.timeSummary}</p>\n                <p className=\"has-text-right has-text-info\"><b>{selected.author}</b> {selected.company}</p>\n                {displayBtn()}\n            </div>\n            <hr />\n\n            <div className=\"article\">\n                {\n                    selected.text.map((x, i) => {\n                        return (\n                            <p key={i}\n                                className=\"content-p\"\n                            >\n                                {x}\n                            </p>\n                        )\n                    })\n                }\n            </div>\n            <div className=\"links\">\n                <a target=\"_blank\" rel=\"noreferrer\" href={selected.src}>{selected.src}</a>\n            </div>\n        </Field>\n    )\n}\n\nSelectedResult.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(SelectedResult);","import React from 'react';\n\nimport \"./ResultsContainer.css\";\n\nimport ResultsList from '../../components/ResultsList';\nimport SelectedResult from '../../components/SelectedResult';\n\nconst ResultsContainer = (props) => {\n    return (\n        <div className=\"ResultsContainer box-shadow\">\n            <ResultsList\n                results={props.results} \n                topic={props.topic}\n                timeRange={props.timeRange}\n                handleSelected={props.handleSelected}\n                selected={props.selected}\n            />\n            <SelectedResult \n                selected={props.selected}\n                deleteArticle={props.deleteArticle}\n            />\n        </div>\n    )\n}\n\nexport default ResultsContainer;","import React, { Component } from 'react'\n\nimport Navbar from '../../components/Navbar'\nimport Container from '../../components/Container';\nimport ResultsContainer from '../../components/ResultsContainer';\n\nimport API from \"../../utils/API\";\n\nimport \"./Home.css\"\n\nclass Home extends Component {\n    state = {\n        searchResults: [],\n        selectedResult: {},\n        filters: {\n            searchTopic: \"Recent\",\n            startYear: \"1900\",\n            endYear: \"1920\"\n        }\n    }\n\n    componentDidMount() {\n        this.getArticles();\n    }\n\n    getArticles = () => {\n        API.getArticles()\n            .then(res => {\n                this.setState({\n                    searchResults: res.data\n                }, () => {\n                    API.getSelectedArticle(res.data[0])\n                        .then(res => {\n                            this.setState(() => {\n                                return {\n                                    selectedResult: res.data\n                                }\n                            })\n                        })\n                        .catch(err => console.log(err))\n                })\n            })\n            .catch(err => console.log(err));\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        this.getArticles();\n    };\n\n    handleSelected = (event) => {\n        const src = event.target.closest(\".Result\").dataset.src;\n        const result = this.state.searchResults.find(result => result.src == src);\n\n        API.getSelectedArticle(result)\n            .then(res => {\n                this.setState(() => {\n                    return {\n                        selectedResult: res.data\n                    }\n                })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <div className=\"Home\">\n                <Navbar />\n                <Container className=\"Container\">\n                    <ResultsContainer\n                        results={this.state.searchResults}\n                        selected={this.state.selectedResult}\n                        topic={this.state.filters.searchTopic}\n                        timeRange={this.state.filters.timeRange}\n                        handleSelected={this.handleSelected}\n                    />\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport Navbar from '../../components/Navbar'\nimport Container from '../../components/Container';\nimport ResultsContainer from '../../components/ResultsContainer';\n\nimport API from '../../utils/API';\n\nimport './Saved.css'\n\nconst Saved = ({ auth }) => {\n    const [savedResults, setSavedResults] = useState([])\n    const [selectedResult, setSelectedResult] = useState({})\n\n    useEffect(() => {\n        if (auth.user) {\n            API.getSavedArticles(auth.user._id)\n                .then(res => {\n                    setSavedResults(res.data)\n                    setSelectedResult(res.data[0])\n                })\n        }\n    }, [auth.user])\n\n    const handleSelected = (event) => {\n        const src = event.target.closest(\".Result\").dataset.src;\n\n        setSelectedResult(savedResults.find(result => result.src == src))\n    }\n\n    const deleteArticle = () => {\n        const results = savedResults.filter(result => result._id != selectedResult._id)\n\n        setSavedResults(results)\n        setSelectedResult(results[0])\n\n        API.deleteArticle(selectedResult._id);\n    }\n\n    return (\n        <div className=\"Saved\">\n            <Navbar />\n            <Container className=\"Container\">\n                <ResultsContainer\n                    results={savedResults}\n                    selected={selectedResult}\n                    handleSelected={handleSelected}\n                    deleteArticle={deleteArticle}\n                    topic=\"Saved Articles\"\n                />\n            </Container>\n        </div>\n    )\n}\n\nSaved.propTypes = {\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(Saved);","import React from 'react';\nimport {  Route, Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, auth: { isAuthenticated, loading }, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            !isAuthenticated && !loading ? (\n                <Redirect to=\"/\" />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n)\n\nPrivateRoute.propTypes = {\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps)(PrivateRoute)\n","import { SET_ALERT, REMOVE_ALERT} from '../actions/types';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n    \n    switch(type) {\n        case SET_ALERT:\n            return [...state, payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== payload);\n        default:\n            return state;\n    }\n}","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    user: null\n}\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action\n    \n    switch(type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: payload\n            }\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', payload.token);\n            return {\n                ...state,\n                ...payload,\n                isAuthenticated: true,\n                loading: false\n            }\n        case REGISTER_FAIL:\n        case AUTH_ERROR:\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false\n            } \n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\n\nexport default combineReducers({\n    alert,\n    auth\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Register from \"./pages/Register\";\nimport Login from \"./pages/Login\";\nimport Home from \"./pages/Home\";\nimport Saved from \"./pages/Saved\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\"\n\n//Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.scss';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  useEffect(() => {\n    store.dispatch(loadUser())\n  }, [])\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          {/* <Alert /> */}\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/home\" component={Home} />\n            <Route exact path=\"/register\" component={Register} />\n            <PrivateRoute exact path=\"/saved\" component={Saved} />\n            {/* \n          <Route component={NoMatch} /> */}\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}